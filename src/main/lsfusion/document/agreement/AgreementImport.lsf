MODULE AgreementImport;

REQUIRE Agreement, ContractImport;

NAMESPACE Agreement;

importAgreements 'Импорт соглашений' (FILE f) {
    LOCAL idAgreement = VARSTRING[15](INTEGER);
    LOCAL idContract = VARSTRING[15](INTEGER);
    LOCAL number = VARSTRING[15](INTEGER);
    LOCAL date1 = DATE (INTEGER);
    LOCAL type = VARSTRING[50](INTEGER);
    LOCAL sum = NUMERIC[16,5] (INTEGER);
    LOCAL closed = DATE (INTEGER);
    LOCAL date2 = DATE (INTEGER);
    LOCAL date3 = DATE (INTEGER);
    LOCAL note = VARSTRING[100](INTEGER);
    LOCAL text = TEXT(INTEGER);
    LOCAL message = VARSTRING[2000] ();
    LOCAL count = INTEGER ();
    
    message() <- '';
    count() <- 0;
        
    IMPORT XLS NOHEADER FROM f TO idAgreement, idContract, number, date1, type, sum, closed, date2, date3, note, text;
          
    FOR imported(INTEGER i) AND i > 2 AND trim(idContract(i)) AND NOT contract(trim(idContract(i))) DO {
    
        message() <- CONCAT ' ', message() + '\r\nстрока:', (i + 1), 'id:', idAgreement(i), 'Код договора:', idContract(i);
        count() <- count() + 1;
    }
    
    IF count() > 0 THEN {
        MESSAGE CONCAT ' ', 'Неимпортированные соглашения, для которых не найдены договоры: ', count(), message();
    }
    
    FOR [GROUP SUM 1 IF INTEGER i > 2 AND contract(trim(idContract(i))) BY trim(idAgreement(i))](VARSTRING[15] id) AND id != '' AND NOT agreement(id) DO NEW c = Agreement {
        id(c) <- id;
    }
    
    FOR [GROUP SUM 1 IF INTEGER i > 2 BY trim(type(i))](VARSTRING[50] type) AND type != '' 
        AND NOT (GROUP MAX AgreementType t IF upper(name(t)) == upper(type)) DO NEW t = AgreementType {
        
        name(t) <- type; 
    }
    
    FOR Agreement a = agreement(trim(idAgreement(INTEGER i))) AND contract(trim(idContract(i))) AND trim(idAgreement(i)) != '' AND i > 2 DO {
        contract(a) <- contract(idContract(i));
        number(a) <- number(i);
        date(a) <- date1(i);
        sum(a) <- sum(i);
        type(a) <- GROUP MAX AgreementType t IF upper(name(t)) == upper(trim(type(i)));
        dateClosing(a) <- closed(i);
        dateSending(a) <- date2(i);
        dateReceiving(a) <- date3(i);
        note(a) <- trim(note(i));
        text(a) <- trim(text(i));
    }
}

importAgreements 'Импорт соглашений' () {
    NEWSESSION INPUT f = FILE DO {
        importAgreements(f);
        APPLY;
    }
}

EXTEND FORM migrationData PROPERTIES() importAgreements;

importAgreementDocumentsXls 'Импорт документов соглашений' () {
    
    NEWSESSION {
        LOCAL id = VARSTRING[15](INTEGER);
        LOCAL path = VARSTRING[250](INTEGER);
        LOCAL file = FILE();
        
        INPUT f = FILE DO {
            IMPORT XLS NOHEADER FROM f TO id, path;
            
            FOR Agreement c = agreement(id(INTEGER i)) AND id(i) AND i > 0 DO {
                TRY {
                    READ 'file://' + documentPath() + '/' + replace(upper(trim(path(i))), '\\', '/') TO file;
                    file(c) <- file();
                }
            }
        }
        APPLY;
    }
}

EXTEND FORM migrationData PROPERTIES() importAgreementDocumentsXls;