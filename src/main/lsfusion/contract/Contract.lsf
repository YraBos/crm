MODULE Contract;

REQUIRE LegalEntity, Doc, Currency, Numerator, Contact;

NAMESPACE Contract;

CLASS Contract 'Договор' : Document;
TABLE contract (Contract);

id 'Код' = DATA VARSTRING[15] (Contract) CHARWIDTH 5 IN id;
contract (id) = GROUP AGGR Contract c BY id (c);

series 'Серия' = DATA STRING[2](Contract);
number 'Номер' = DATA VARSTRING[15](Contract) IN id;

@defineNumeratedDefault(Contract, 'Договоры', 'ДГ');

legalEntity = DATA LegalEntity(Contract);
idLegalEntity 'Код организации' (Contract c) = id(legalEntity(c));
nameLegalEntity 'Организация' (Contract c) = name(legalEntity(c)) IN id;
customer (Contract c) = customer(legalEntity(c));
nameCustomer 'Клиент' (Contract c) = name(customer(legalEntity(c)));

company = DATA LegalEntity(Contract);
idCompany 'Код компании' (Contract c) = id(company(c));
nameCompany 'Компания' (Contract c) = name(company(c)) IN id;

authorisedPersonLegalEntity = DATA Contact.Contact(Contract);
nameAuthorisedPersonLegalEntity 'Уп. лицо организации' (Contract c) = name(authorisedPersonLegalEntity(c));
authorisedDocumentLegalEntity 'На основании' = DATA VARSTRING[1000](Contract) CHARWIDTH 20;

authorisedPersonCompany  (Contract c) = DATA Contact.Contact(Contract);
nameAuthorisedPersonCompany 'Уп. лицо компании' (Contract c) = name(authorisedPersonCompany(c));
authorisedDocumentCompany 'На основании' = DATA VARSTRING[1000](Contract) CHARWIDTH 20;

WHEN LOCAL CHANGED (legalEntity(Contract c)) DO {
    authorisedPersonLegalEntity (c) <- authorisedPerson(legalEntity(c));
    authorisedDocumentLegalEntity (c) <- OVERRIDE authorisedDocument(authorisedPersonLegalEntity(c)), authorisedDocument(legalEntity(c));
}
WHEN LOCAL CHANGED (authorisedPersonLegalEntity(Contract c)) AND NOT CHANGED (legalEntity(c)) DO {
    authorisedDocumentLegalEntity (c) <- authorisedDocument(authorisedPersonLegalEntity(c));
}
WHEN LOCAL CHANGED (company(Contract c)) DO {
    authorisedPersonCompany (c) <- authorisedPerson(company(c));
    authorisedDocumentCompany (c) <- OVERRIDE authorisedDocument(authorisedPersonCompany(c)), authorisedDocument(company(c));
}
WHEN LOCAL CHANGED (authorisedPersonCompany(Contract c)) AND NOT CHANGED (company(c)) DO {
    authorisedDocumentCompany (c) <- authorisedDocument(authorisedPersonCompany(c));
}

CONSTRAINT authorisedPersonLegalEntity(Contract c) AND NOT legalEntity(authorisedPersonLegalEntity(c)) == legalEntity(c) 
    CHECKED BY authorisedPersonLegalEntity[Contract] MESSAGE 'Организация уполномоченного лица не совпадает с организацией договора';
CONSTRAINT authorisedPersonCompany(Contract c) AND NOT legalEntity(authorisedPersonCompany(c)) == company(c) 
    CHECKED BY authorisedPersonCompany[Contract] MESSAGE 'Организация уполномоченного лица не совпадает с компанией договора';
CONSTRAINT company(Contract c) AND NOT isCompany(company(c)) CHECKED BY company[Contract] MESSAGE 'Компания договора не является компанией';

date 'Дата' = DATA DATE (Contract) IN id;
sum 'Стоимость' = DATA NUMERIC[16,5](Contract) CHARWIDTH 10;

currency = DATA Currency (Contract);
nameCurrnecy 'Валюта' (Contract d) = name(currency(d));
shortNameCurrency 'Валюта (сокр.)' (Contract p) = shortName(currency(p));
sumCurrency 'Стоимость в валюте' (Contract p) = DATA NUMERIC[16,5](Contract);

WHEN LOCAL (SETCHANGED (sumCurrency(Contract c)) OR CHANGED (currency(c))) AND NOT CHANGED (sum(c)) DO {
    sum(c) <- round2(sumCurrency(c) / OVERRIDE (rateOn(defaultTypeExchange(), currency(c), date(c))), 1);
}

CLASS ContractType 'Тип договора';
TABLE contractType(ContractType);

name 'Наименование' = DATA VARISTRING[50](ContractType) CHARWIDTH 15;

FORM contractType 'Тип договора'
    OBJECTS o = ContractType PANEL
    PROPERTIES(o) name
    
    EDIT ContractType OBJECT o
;

FORM contractTypes 'Типы договора'
    OBJECTS o = ContractType
    PROPERTIES(o) READONLY name
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
    
    LIST ContractType OBJECT o
;

type = DATA ContractType(Contract);
nameType 'Тип договора' (Contract c) = name(type(c)) CHARWIDTH 15;

CLASS ContractSendingWay 'Способ отправки договора';
TABLE contractSendingWay(ContractSendingWay);

name 'Наименование' = DATA VARSTRING[50](ContractSendingWay) CHARWIDTH 15;

FORM contractSendingWay 'Способ отправки договора'
    OBJECTS o = ContractSendingWay PANEL
    PROPERTIES(o) name
    
    EDIT ContractSendingWay OBJECT o
;

FORM contractSendingWays 'Способы отправки договора'
    OBJECTS o = ContractSendingWay
    PROPERTIES(o) READONLY name
    PROPERTIES (o) NEWSESSION NEW, EDIT, DELETE
    
    LIST ContractSendingWay OBJECT o
;
sendingWay = DATA ContractSendingWay(Contract);
nameSendingWay 'Способ отправки договора' (Contract c) = name(sendingWay(c));

dateSigningCompany 'Дата подписания компанией' = DATA DATE (Contract);
dateSending 'Дата отправки' = DATA DATE (Contract);
dateSigningCustomer 'Дата подписания клиентом' = DATA DATE (Contract);
dateReceiving 'Дата получения' = DATA DATE (Contract);
dateTo 'Дата окончания' = DATA DATE (Contract);
dateClosing 'Дата закрытия' = DATA DATE (Contract);
note 'Примечание' = DATA VARSTRING[100](Contract) CHARWIDTH 20;
text 'Текст' = DATA TEXT (Contract);
textString 'Текст' (Contract c) = VARSTRING[500](text(c)) CHARWIDTH 20;

contract = ABSTRACT Contract (Document);
numberContract 'Номер договора' (Document d) = number(contract(d)) CHARWIDTH 10;
dateContract 'Дата договора' (Document d) = date(contract(d));
nameTypeContract 'Тип договора' (Document d) = nameType(contract(d));

id(Contract c) += id(c);
number(Contract c) += number(c);
date(Contract c) += date(c);
nameType(Contract c) += nameType(c);
dateSigningCompany(Contract c) += dateSigningCompany(c);
dateSending(Contract c) += dateSending(c);
dateSigningCustomer(Contract c) += dateSigningCustomer(c);
dateReceiving(Contract c) += dateReceiving(c);
dateClosing(Contract c) += dateClosing(c);
customer(Contract c) += customer(c);
legalEntity(Contract c) += legalEntity(c);
company(Contract c) += company(c);
contract(Contract c) += c IF c IS Contract;
sum(Contract c) += sum(c);

EXTEND CLASS DocType {
    contract 'Договор'
}
docType(Contract c) += DocType.contract IF c IS Contract;

FORM contract 'Договор'
    OBJECTS o = Contract PANEL
    PROPERTIES(o) id, nameCustomer READONLY, nameLegalEntity, nameCompany, number, date, sum, nameType, nameSendingWay, 
                  dateSigningCompany, dateSending, dateSigningCustomer, dateReceiving, dateTo, dateClosing, note, text,
                  shortNameCurrency, sumCurrency, nameNumerator, series, nameAuthorisedPersonLegalEntity, nameAuthorisedPersonCompany,
                  authorisedDocumentLegalEntity, authorisedDocumentCompany
    
    EDIT Contract OBJECT o
;

DESIGN contract {
    OBJECTS {
        BOX (o) {
            NEW header FIRST {
                fill = 1;
                NEW top1 {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    NEW main {
                        caption = 'Основные параметры';
                        MOVE PROPERTY (id(o));
                        MOVE PROPERTY (nameNumerator(o));
                        NEW number {
                            type = CONTAINERH;
                            MOVE PROPERTY (series(o));
                            MOVE PROPERTY (number(o));
                        }
                        MOVE PROPERTY (date(o));
                        MOVE PROPERTY (nameType(o));
                    }
                    NEW legalEntities {
                        caption = 'Контрагенты';
                        flex = 1;
                        MOVE PROPERTY (nameCompany(o));
                        NEW autC {
                            type = CONTAINERH;
                            fill = 1;
                            MOVE PROPERTY (nameAuthorisedPersonCompany(o));
                            MOVE PROPERTY (authorisedDocumentCompany(o));
                        }
                        MOVE PROPERTY (nameCustomer(o));
                        MOVE PROPERTY (nameLegalEntity(o));
                        NEW autL {
                            type = CONTAINERH;
                            fill = 1;
                            MOVE PROPERTY (nameAuthorisedPersonLegalEntity(o));
                            MOVE PROPERTY (authorisedDocumentLegalEntity(o));
                        }
                    }
                }
                NEW processing {
                    caption = 'Обработка';
                    type = COLUMNS;
                    columns = 3;
                    childrenAlignment = END;
                    MOVE PROPERTY (nameSendingWay(o));
                    MOVE PROPERTY (dateSigningCompany(o));
                    MOVE PROPERTY (dateSending(o));
                    MOVE PROPERTY (dateSigningCustomer(o));
                    MOVE PROPERTY (dateReceiving(o));
                    MOVE PROPERTY (dateTo(o));
                    MOVE PROPERTY (dateClosing(o));
                }
                NEW top2 {
                    type = CONTAINERH;
                    alignment = STRETCH;
                    NEW payment {
                        caption = 'Задолженность';
                        type = CONTAINERH;
                        MOVE PROPERTY (sum(o));
                        MOVE PROPERTY (shortNameCurrency(o));
                    }
                    NEW add {
                        caption = 'Дополнительно';
                        fill = 1;
                        alignment = STRETCH;
                        MOVE PROPERTY (note(o));
                    }
                }
            }
        }
        NEW details {
            type = TABBED;
            fill = 1;
            NEW text {
                caption = 'Текст';
                MOVE PROPERTY (text(o)) { 
                    caption = '';
                    fill = 1;
                }
            }
        }
    }
}

FORM contracts 'Договоры'
    OBJECTS o = Contract LAST 
    PROPERTIES(o) READONLY id, nameCustomer, nameLegalEntity, nameCompany, number, date, sum, shortNameCurrency, sumCurrency, nameType, nameSendingWay, 
                           dateSending, dateReceiving, dateTo, dateClosing, note, textString
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
    ORDER date(o)
;

FORM dialogContracts 'Договоры'
    OBJECTS o = Contract LAST 
    PROPERTIES(o) READONLY id, nameCustomer, nameLegalEntity, nameCompany, number, date, sum, shortNameCurrency, sumCurrency, nameType, nameSendingWay, 
                           dateSending, dateReceiving, dateTo, dateClosing, note, textString
    ORDER date(o)
    
    LIST Contract OBJECT o
;

NAVIGATOR {
    NEW FOLDER contractFolder 'Договоры' BEFORE masterData WINDOW toolbar {
       NEW contracts;   
    }
}

defaultCompany = DATA LegalEntity();
nameDefaultCompany 'Компания по умолчанию' () = name(defaultCompany());

CONSTRAINT defaultCompany() AND NOT isCompany(defaultCompany()) CHECKED BY defaultCompany[] MESSAGE 'Компания по умолчанию не является компанией';

EXTEND FORM options PROPERTIES nameDefaultCompany();

DESIGN options {
    pane {
        NEW contracts {
            caption = 'Договор';
            MOVE PROPERTY (nameDefaultCompany());
        }
    }
}

WHEN LOCAL SET (Contract c IS Contract) DO {
    company(c) <- defaultCompany();
}