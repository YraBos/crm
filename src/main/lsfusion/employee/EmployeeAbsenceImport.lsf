MODULE EmployeeAbsenceImport;

REQUIRE EmployeeAbsence, EmployeeImport;

NAMESPACE Employee;

importEmployeeAbsences 'Импорт отсутствия сотрудников' (FILE f) {
    
    LOCAL idEmployeeAbsence = STRING[15](INTEGER);
    LOCAL idEmployee = STRING[15](INTEGER);
    LOCAL reason = STRING[100](INTEGER);
    LOCAL df = DATE (INTEGER);
    LOCAL dt = DATE (INTEGER);
    LOCAL hours = NUMERIC[7,2](INTEGER);
    LOCAL date = DATE (INTEGER);
    LOCAL note = STRING[100](INTEGER);
    
    IMPORT XLS NOHEADER FROM f TO idEmployeeAbsence = B, idEmployee, reason, df, dt, hours, date, note;
    
    FOR [GROUP SUM 1 IF INTEGER i > 1 BY idEmployeeAbsence(i)](STRING[15] id) AND id != '' AND NOT absence(id) DO NEW a = Absence {
        id(a) <- id;
    }
    
    FOR [GROUP SUM 1 IF INTEGER i > 1 BY trim(reason(i))](STRING[100] reason) AND reason != '' AND NOT [GROUP MAX AbsenceReason r BY name(r)](reason) DO NEW r = AbsenceReason {
        name(r) <- reason;
    }
    
    FOR Absence a = absence(idEmployeeAbsence(INTEGER i)) AND idEmployeeAbsence(i) DO {
    
        employee(a) <- employee(idEmployee(i));
        reason(a) <- GROUP MAX AbsenceReason r IF name(r) == trim(reason(i));
        dateFrom(a) <- df(i);
        dateTo(a) <- dt(i);
        hours(a) <- hours(i);
        date(a) <- date(i);
        note(a) <- note(i);
    }
}

importEmployeeAbsences 'Импорт отсутствия сотрудников' () {
    NEWSESSION INPUT f = FILE DO { 
        importEmployeeAbsences(f);
        APPLY;
    }
}

FORM exportEmployeeAbsences 'Экспорт отсутствия сотрудников'
    OBJECTS c = Absence
    PROPERTIES (c) id, idEmployee, reason, dateFrom, dateTo, hours, date, note
    ORDERS dateFrom(c)
;

exportEmployeeAbsences 'Экспорт отсутствия сотрудников' () {
    
    LOCAL file = FILE();
    
    PRINT exportEmployeeAbsences XLS TO file;
    WRITE CLIENT DIALOG file() TO 'Отсутствие сотрудников';
    open(file(), 'Отсутствие сотрудников');
}

EXTEND FORM migrationData PROPERTIES() exportEmployeeAbsences, importEmployeeAbsences;
