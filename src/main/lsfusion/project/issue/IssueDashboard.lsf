MODULE IssueDashboard;

REQUIRE IssueLog, ProjectExternal, Dashboard;

NAMESPACE Project;

WHEN LOCAL SET (Issue i IS Issue) DO {
    dateTimeCreated(i) <- currentDateTime();
    author(i) <- currentUser();
    dateFrom(i) <- currentDate();
    status(i) <- GROUP MAX IssueStatus s IF name(s) == 'Новая';
}

WHEN (CHANGED (name(Issue i)) OR CHANGED (status(i)) OR CHANGED (description(i)) OR CHANGED (assignedTo(i)) OR CHANGED (tracker(i)) 
    OR CHANGED (dateFrom(i)) OR CHANGED (dateTo(i)) OR CHANGED (doneRatio(i)) OR CHANGED (estimatedHours(i))) AND NOT external(project(i)) DO {
    dateTimeUpdated(i) <- currentDateTime();
}

FORM issueDashboard 'Мои задачи'

    OBJECTS o = Issue LAST 
    PROPERTIES(o) READONLY number, name, descriptionString, dateTimeCreated, dateTimeUpdated, dateFrom, dateTo, doneRatio, estimatedHours, nameProject, 
                           nameAuthor, nameAssignedTo, nameTracker, nameStatus
    PROPERTIES(o) NEWSESSION NEW
    PROPERTIES(o) SHOWIF NOT external(project(o)) NEWSESSION EDIT, DELETE
    FILTERGROUP open FILTER 'Открытые' NOT isClosed(status(o)) DEFAULT 
    FILTERGROUP my FILTER 'Мои задачи' assignedTo(o) == currentUser() DEFAULT
    ORDER number(o)
    
    OBJECTS l = IssueLog
    PROPERTIES (l) READONLY dateTime, nameUser, property, value
    FILTERS issue(l) == o
;

DESIGN issueDashboard {
    OBJECTS {
        type = SPLITV;
        BOX (o) { fill = 3; }
        BOX (l) { fill = 1; }
    }
}

NAVIGATOR {
    dashboard {
        NEW issueDashboard;
    }
}