MODULE TimeEntryTotalDashboard;

REQUIRE TimeEntryExpense, Dashboard, WorkingHours, EmployeeAbsence;

NAMESPACE Project;

absenceHours 'Кол-во часов' (Employee e, AbsenceReason r, INTEGER y) =  GROUP SUM hours(Absence a, DATE d) BY employee(a), reason(a), extractYear(d) CHARWIDTH 5;
absenceDays 'Кол-во дней' (Employee e, AbsenceReason r, INTEGER y) = round1(absenceHours(e, r, y) / 8);
absenceHours 'Кол-во часов' (AbsenceReason r, INTEGER y) =  GROUP SUM hours(Absence a, DATE d) BY reason(a), extractYear(d);
absenceHours 'Кол-во часов' (Employee e, INTEGER y) =  GROUP SUM hours(Absence a, DATE d) BY employee(a), extractYear(d);
absenceDays 'Кол-во дней' (Employee e, INTEGER y) = round1(absenceHours(e, y) / 8);
absenceHours (Employee e, INTEGER y, Month m) =  GROUP SUM hours(Absence a, DATE d) BY employee(a), extractYear(d), extractMonth(d);
totalHours 'Часов в месяц' (Employee e, INTEGER y, Month m) = hours(e, y, m) (+) absenceHours(e, y, m);

backgroundHours (Employee e, INTEGER y, Month m) = IF totalHours(e, y, m) < monthHours(y, m) THEN RGB (255, 200, 200);
backgroundTotalHours (Employee e, DATE d) = IF absenceHours(e, d) THEN RGB (255, 255, 200);

totalHours 'Всего часов у сотрудника' (Employee e, DATE d) = hours(e, d) (+) absenceHours(e, d) CHARWIDTH 2;

FORM timeEntryDashboard 'Контроль отмеченного времени'
    
    OBJECTS m = Month PANEL, y = INTEGER PANEL
    PROPERTIES month 'Месяц' = staticCaption(m) SELECTOR, year 'Год' = VALUE (y), monthHours(y, m)
    
    OBJECTS d = DATE 
    OBJECTS e = Employee
    PROPERTIES READONLY name(e), totalHours(e, y, m) BACKGROUND backgroundHours(e, y, m), totalHours(e, d) COLUMNS (d) HEADER extractDay(d) BACKGROUND backgroundTotalHours(e, d)
    PROPERTIES extractDay(d) SHOWIF NULL 
    ORDER extractDay(d), name(e)
    
    FILTERGROUP e FILTER 'С отметкой' totalHours(e, y, m) DEFAULT 
                  FILTER 'Активные' active(e)
                  
    FILTERS iterate(d, toDateFormat('01' + lpad(TEXT (number(m)), 2, '0') + y, 'DDMMYYYY'),
                                    lastDayOfMonth(toDateFormat('01' + lpad(TEXT (number(m)), 2, '0') + y, 'DDMMYYYY')))
    
    OBJECTS t = TimeEntry
    PROPERTIES (t) READONLY id, hours, commentsString, date, nameActivity, nameProject, nameCustomer, numberIssue, nameIssue
    ORDER date(t)
    
    FILTERS employee(t) == e, month(t) == m, year(t) == y
    
    OBJECTS p = Project
    PROPERTIES READONLY name(p), hours(e, p, y, m)
    ORDER hours(e, p, y, m)
    FILTERS hours(e, p, y, m)
    
    OBJECTS a = Absence
    PROPERTIES (a) READONLY id, nameEmployee, nameReason, dateFrom, dateTo, hours, workingHours, date, note
    ORDER date(a)
    FILTERS employee(a) == e, dateFrom(a) <= lastDayOfMonth(d) AND dateTo(a) >= firstDayOfMonth(d)

    OBJECTS ad = DATE
    PROPERTIES READONLY VALUE(ad), extractDOWName(ad), hours(a, ad)
    FILTERS hours(a, ad)
    
    OBJECTS yy = INTEGER PANEL 
    PROPERTIES year1 'Год' = VALUE (yy)
    
    OBJECTS r = AbsenceReason
    OBJECTS ee = Employee
    PROPERTIES READONLY name(ee), absenceDays(ee, yy), absenceDays(ee, r, yy) COLUMNS (r) HEADER name(r)
    FILTERS absenceHours(r, yy)
    
    OBJECTS ab = Absence
    PROPERTIES (ab) READONLY id, nameEmployee, nameReason, dateFrom, dateTo, hours, workingHours, date, note
    ORDER date(ab)
    FILTERS employee(ab) == ee, extractYear(dateFrom(ab)) == yy OR extractYear(dateTo(ab)) == yy
    
    OBJECTS abd = DATE
    PROPERTIES READONLY VALUE(abd), extractDOWName(abd), hours(ab, abd)
    FILTERS hours(ab, abd)
    
    FILTERGROUP ee FILTER 'С отметкой' absenceHours(ee, y) DEFAULT 
                   FILTER 'Активные' active(ee)
                  
    EVENTS ON INIT {
        SEEK timeEntryDashboard.m = extractMonth(currentDate());
        SEEK timeEntryDashboard.y = extractYear(currentDate());
        SEEK timeEntryDashboard.yy = extractYear(currentDate());
    }
;

DESIGN timeEntryDashboard {
    OBJECTS {
        NEW headerTab FIRST {
            type = TABBED;
            fill = 1;
            NEW month {
                caption = 'За месяц';
                NEW filterMonth {
                    type = CONTAINERH;
                    MOVE PROPERTY (month);
                    MOVE PROPERTY (year);
                    MOVE PROPERTY (monthHours(y, m));
                }
                MOVE BOX (e); 
                NEW tab AFTER BOX (e) {
                    type = TABBED;
                    fill = 1;
                    NEW entry {
                        caption = 'Отметки времени';
                        type = CONTAINERH;
                        fill = 1;
                        MOVE BOX (t) { fill = 5; }
                        MOVE BOX (p) { fill = 1; }
                    }
                    NEW absence {
                        caption = 'Отсутствие';
                        type = CONTAINERH;
                        fill = 1;
                        MOVE BOX (a) { fill = 5; }
                        MOVE BOX (ad) { fill = 1; }
                    }
                }
            }
            NEW year {
                caption = 'За год';
                NEW filterYear {
                    MOVE PROPERTY (year1);
                }
                MOVE BOX (ee);
                NEW bottom {
                    type = CONTAINERH;
                    fill = 1;
                    MOVE BOX (ab) { fill = 5; }
                    MOVE BOX (abd) { fill = 1; }
                    
                }
            }
        }
    }
}

NAVIGATOR {
    dashboard {
        NEW timeEntryDashboard;
    }
}

timeEntries 'Отметки времени' (Issue i, DATE df, DATE dt) = GROUP SUM 1 IF TimeEntry t AND date(t) >= df AND date(t) <= dt BY issue(t);
hours 'Трудозатраты' (Issue i, DATE df, DATE dt) = GROUP SUM hours(TimeEntry t) IF date(t) >= df AND date(t) <= dt BY issue(t);
hours 'Трудозатраты' (Customer c, DATE  df, DATE dt) = 
    GROUP SUM hours(TimeEntry t) IF date(t) >= df AND date(t) <= dt AND (customer(t) == c OR customer(project(t)) == c OR customer(project(issue(t))) == c);

FORM customerReport 'Отчёт для клиента'
    OBJECTS cd = (c = Customer, df = DATE, dt = DATE) PANEL SUBREPORT 
    PROPERTIES 'Клиент' = name(c) SELECTOR, 'Дата с' = VALUE (df), 'Дата по' =  VALUE (dt), hours(c, df, dt)
    
    OBJECTS i = Issue
    PROPERTIES (i) READONLY number, dateTimeCreated, estimatedHours, nameAuthor, nameAssignedTo, nameTracker, nameStatus, name
    PROPERTIES hours(i, df, dt) AFTER estimatedHours(i)
    ORDER number(i)
    FILTERS customer(project(i)) == c, timeEntries(i, df, dt)
    
    OBJECTS t = TimeEntry
    PROPERTIES (t) READONLY nameEmployee, date, hours, nameActivity, commentsString
    ORDER date(t)
    FILTERS issue(t) == i, date(t) >= df AND date(t) <= dt
    
    OBJECTS te = TimeEntry
    PROPERTIES (te) READONLY nameEmployee, date, hours, nameActivity, commentsString
    ORDER date(te)
    FILTERS (customer(te) == c OR customer(project(te)) == c) AND NOT issue(te), date(te) >= df AND date(te) <= dt
;

printCustomerReport 'Печать' (Customer c, DATE df, DATE dt) {
    PRINT customerReport OBJECTS c = c, df = df, dt = dt XLS;
}

EXTEND FORM timeEntries 
    OBJECTS cd = (c = Customer, df = DATE, dt = DATE) PANEL 
    PROPERTIES cus 'Клиент' = name(c) SELECTOR, dFrom 'Дата с' = VALUE (df), dTo 'Дата по' =  VALUE (dt), printCustomerReport(c, df, dt);

DESIGN timeEntries {
    OBJECTS {
        NEW report FIRST {
            caption = 'Отчет по клиенту';
            type = CONTAINERH;
            MOVE PROPERTY (cus);
            MOVE PROPERTY (dFrom);
            MOVE PROPERTY (dTo);
            MOVE PROPERTY (printCustomerReport(c, df, dt));
        }
    }
}