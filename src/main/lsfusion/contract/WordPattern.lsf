MODULE WordPattern;

REQUIRE ActWord, Pattern;

NAMESPACE Pattern;

in 'Вкл.' = DATA BOOLEAN (TemplateEntry, Pattern);

EXTEND FORM template 
    OBJECTS p = Pattern
    PROPERTIES in(te, p), text(p) READONLY, note(p) READONLY 
;

DESIGN template {
    OBJECTS {
        MOVE BOX (t);
        NEW patterns AFTER BOX (t) {
            type = SPLITH;
            fill = 1;
            MOVE BOX (te) {
                PROPERTY (value(te)) { valueWidth = 50; }
            }
            MOVE BOX (p);
        }
    }
}

in(Template t, Pattern p) = GROUP SUM 1 IF in(TemplateEntry te, p) BY template(te);

EXTEND FORM patterns
    OBJECTS t = Template
    PROPERTIES (t) READONLY name, id
    FILTERS in(t, p)
       
    OBJECTS te = TemplateEntry
    PROPERTIES (te) READONLY isTable, key, description, value
    FILTERS template(te) == t, in(te, p)
;

DESIGN patterns {
    OBJECTS {
        NEW templates {
            type = SPLITH;
            fill = 1;
            MOVE BOX (t) { fill = 1; }
            MOVE BOX (te) { fill = 4; }
        }
    }
}

select 'Отм.' = DATA LOCAL BOOLEAN (TemplateEntry, Pattern);

text (TemplateEntry te) =  GROUP CONCAT (CONCAT '', text(Pattern pt), note(pt)) IF select(te, pt), '\r\n';

FORM editTemplatePattern 'Заготовки'
    OBJECTS te = TemplateEntry PANEL 
    OBJECTS p = Pattern
    PROPERTIES select(te, p)
    PROPERTIES (p) READONLY text, note
    FILTERS in(te, p)
    
    EVENTS ON OK {
        value(te) <- text(te);
    }
;
setText 'Использовать заготовки' (TemplateEntry te) {
    SHOW editTemplatePattern OBJECTS te = te;
}

countPattern 'Есть заготовки' (TemplateEntry te) = GROUP SUM 1 IF in(te, Pattern p);

EXTEND FORM editTemplate 
    PROPERTIES p 'Есть заготовки' = BOOLEAN (countPattern(te)) AFTER value(te)
    PROPERTIES setText(te) GRID READONLYIF NOT countPattern(te) BEFORE p
;

overCopy(TemplateEntry n, TemplateEntry t) + {
    in(n, Pattern p) <- in(t, p);
}

createTemplateEntriesMain 'Сформировать строки' (Template t) {
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NUMBER_DOCUMENT'; description(te) <- 'Номер документа'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'DATE_DOCUMENT'; description(te) <- 'Дата документа'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'TYPE_DOCUMENT'; description(te) <- 'Тип документа'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NAME_CUSTOMER'; description(te) <- 'Клиент'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NAME_COMPANY'; description(te) <- 'Компания'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NAME_LEGAL_ENTITY'; description(te) <- 'Организация'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'SUM_DOCUMENT'; description(te) <- 'Сумма'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'SENDING_DATE_DOCUMENT'; description(te) <- 'Дата отправки'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'RECEIVING_DATE_DOCUMENT'; description(te) <- 'Дата получения'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NOTE_DOCUMENT'; description(te) <- 'Примечание'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'TEXT_DOCUMENT'; description(te) <- 'Текст'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'AUTHORISED_DOCUMENT_COMPANY'; description(te) <- 'Основание уп. лица компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'AUTHORISED_DOCUMENT_CUSTOMER'; description(te) <- 'Основание уп. лица организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'SHORT_NAME_AUTHORISED_PERSON_COMPANY'; description(te) <- 'ФИО(сокр.) уп. лица компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'FULL_NAME_AUTHORISED_PERSON_COMPANY'; description(te) <- 'ФИО(полное) уп. лица компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'FULL_NAME_RP_AUTHORISED_PERSON_COMPANY'; description(te) <- 'ФИО(полное)(р.п.) уп. лица компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'SHORT_NAME_AUTHORISED_PERSON_CUSTOMER'; description(te) <- 'ФИО(сокр.) уп. лица организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'FULL_NAME_AUTHORISED_PERSON_CUSTOMER'; description(te) <- 'ФИО(полное) уп. лица организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'FULL_NAME_RP_AUTHORISED_PERSON_CUSTOMER'; description(te) <- 'ФИО(полное)(р.п.) уп. лица организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSITION_AUTHORISED_PERSON_COMPANY'; description(te) <- 'Должность уп. лица компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSITION_RP_AUTHORISED_PERSON_COMPANY'; description(te) <- 'Должность(р.п.) уп. лица компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSITION_AUTHORISED_PERSON_CUSTOMER'; description(te) <- 'Должность уп. лица организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSITION_RP_AUTHORISED_PERSON_CUSTOMER'; description(te) <- 'Должность(р.п.) уп. лица организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'ADDRESS_COMPANY'; description(te) <- 'Адрес компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSTCODE_COMPANY'; description(te) <- 'Почтовый индекс компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'ACCOUNT_COMPANY'; description(te) <- 'Номер р/с компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NAME_BANK_COMPANY'; description(te) <- 'Наименование банка компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSTCODE_BANK_COMPANY'; description(te) <- 'Почтовый индекс банка компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'ADDRESS_BANK_COMPANY'; description(te) <- 'Адрес банка компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'MFO_BANK_COMPANY'; description(te) <- 'МФО банка компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'UNP_COMPANY'; description(te) <- 'УНП компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'OKPO_COMPANY'; description(te) <- 'ОКПО компании'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'ADDRESS_LEGAL_ENTITY'; description(te) <- 'Адрес организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSTCODE_LEGAL_ENTITY'; description(te) <- 'Почтовый индекс организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'ACCOUNT_LEGAL_ENTITY'; description(te) <- 'Номер р/с организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NAME_BANK_LEGAL_ENTITY'; description(te) <- 'Наименование банка организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'POSTCODE_BANK_LEGAL_ENTITY'; description(te) <- 'Почтовый индекс банка организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'ADDRESS_BANK_LEGAL_ENTITY'; description(te) <- 'Адрес банка организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'MFO_BANK_LEGAL_ENTITY'; description(te) <- 'МФО банка организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'UNP_LEGAL_ENTITY'; description(te) <- 'УНП организации'; }
    NEW te = TemplateEntry { template(te) <- t; key(te) <- 'OKPO_LEGAL_ENTITY'; description(te) <- 'ОКПО организации'; }
}

createTimeEntriesDialog 'Сформировать строки' (Template t) {
    DIALOG dialogDocTypes OBJECTS d INPUT DO {
        IF d == DocType.contract THEN {
            createTemplateEntriesMain(t);
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'SENDING_WAY'; description(te) <- 'Способ отправки договора'; }
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'SIGNING_DATE_COMPANY'; description(te) <- 'Дата подписания компанией'; }
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'SIGNING_DATE_CUSTOMER'; description(te) <- 'Дата подписания организацией'; }
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'TO_DATE_DOCUMENT'; description(te) <- 'Дата окончания'; }
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'CLOSING_DATE_DOCUMENT'; description(te) <- 'Дата закрытия'; }
        }
        IF d == DocType.agreement THEN {
            createTemplateEntriesMain(t);
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NUMBER_CONTRACT'; description(te) <- 'Номер договора'; }
        }
        IF d == DocType.act THEN {
            createTemplateEntriesMain(t);
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NUMBER_CONTRACT'; description(te) <- 'Номер договора'; }
            NEW te = TemplateEntry { template(te) <- t; key(te) <- 'NUMBER_AGREEMENT'; description(te) <- 'Номер соглашения'; }
        }
    }
}

EXTEND FORM template PROPERTIES createTimeEntriesDialog(t) DRAW te TOOLBAR, required(te) AFTER value(te);
