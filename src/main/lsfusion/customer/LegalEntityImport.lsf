MODULE LegalEntityImport;

REQUIRE LegalEntity, Utils;

NAMESPACE LegalEntity;

importLegalEntities 'Импорт организаций' (FILE f) {
    LOCAL idCustomer = VARSTRING[15](INTEGER);
    LOCAL nameCustomer = VARSTRING[250](INTEGER);
    LOCAL emailCustomer = VARSTRING[200](INTEGER);
    LOCAL phoneCustomer = VARSTRING[50](INTEGER);
    LOCAL siteCustomer = VARSTRING[100](INTEGER);
    LOCAL noteCustomer = VARSTRING[100](INTEGER);
    LOCAL dateCustomer = DATE(INTEGER);
    LOCAL idLegalEntity = VARSTRING[15](INTEGER);
    LOCAL extIdLegalEntity = VARSTRING[15](INTEGER);
    LOCAL nameLegalEntity = VARSTRING[250](INTEGER);
    LOCAL postcode = VARSTRING[10](INTEGER);
    LOCAL region = VARSTRING[20](INTEGER);
    LOCAL district = VARSTRING[20](INTEGER);
    LOCAL locality = VARSTRING[50](INTEGER);
    LOCAL street = VARSTRING[50](INTEGER);
    LOCAL house = VARSTRING[20](INTEGER);
    LOCAL office = VARSTRING[20](INTEGER);
    LOCAL unp = VARSTRING[9](INTEGER);
    LOCAL okpo = VARSTRING[20](INTEGER);
    LOCAL idBank = VARSTRING[15](INTEGER);
    LOCAL numberBank = VARSTRING[10](INTEGER);
    LOCAL nameBank = VARSTRING[100](INTEGER);
    LOCAL addressBank = VARSTRING[250](INTEGER);
    LOCAL mfoBank = VARSTRING[11](INTEGER);
    
    IMPORT XLS NOHEADER FROM f TO idCustomer, nameCustomer, emailCustomer, phoneCustomer, siteCustomer, noteCustomer, dateCustomer, 
                         idLegalEntity, extIdLegalEntity, nameLegalEntity, postcode, region, district, locality, street, house, office, unp, okpo, 
                         idBank, numberBank, nameBank, addressBank, mfoBank;
                         
    FOR [GROUP SUM 1 IF INTEGER i > 0 BY trim(idCustomer(i))](VARSTRING[15] id) AND id AND NOT customer(id) DO NEW c = Customer {
        id(c) <- id;
    }
    FOR INTEGER ii = [GROUP MIN INTEGER i IF i > 0 BY trim(idLegalEntity(i))](VARSTRING[15] id) AND id AND NOT legalEntity(id) DO NEW l = LegalEntity {
        id(l) <- id;
        customer(l) <- customer(trim(idCustomer(ii)));
    }
    FOR [GROUP SUM 1 IF INTEGER i > 0 BY trim(idBank(i))](VARSTRING[15] id) AND id AND NOT bank(id) DO NEW b = Bank {
        id(b) <- id;
    }
    
    FOR Customer c = customer(idCustomer(INTEGER i)) AND trim(idCustomer(i)) != '' DO {
        name(c) <- trim(nameCustomer(i));
        email(c) <- trim(emailCustomer(i));
        phone(c) <- trim(phoneCustomer(i));
        site(c) <- trim(siteCustomer(i));
        note(c) <- trim(noteCustomer(i));
        dateFrom(c) <- dateCustomer(i);
    }
    
    FOR LegalEntity l = legalEntity(idLegalEntity(INTEGER i)) AND trim(idLegalEntity(i)) != '' DO {
        extId(l) <- trim(extIdLegalEntity(i)) IF trim(extIdLegalEntity(i)) != '';
        name(l) <- trim(nameLegalEntity(i));
        postcode(l) <- trim(postcode(i));
        region(l) <- trim(region(i));
        district(l) <- trim(district(i));
        locality(l) <- trim(locality(i));
        street(l) <- trim(street(i));
        houseNumber(l) <- trim(house(i));
        officeNumber(l) <- trim(office(i));
        UNP(l) <- trim(unp(i));
        OKPO(l) <- trim(okpo(i));
        bank(l) <- bank(trim(idBank(i)));
    }
    
    FOR Bank b = bank(idBank(INTEGER i)) AND trim(idBank(i)) != '' DO {
        number(b) <- trim(numberBank(i));
        name(b) <- trim(nameBank(i));
        address(b) <- trim(addressBank(i));
        mfo(b) <- trim(mfoBank(i));
    }
}

importLegalEntities 'Импорт организаций' () {
    NEWSESSION INPUT f = FILE DO {
        importLegalEntities(f);
        APPLY;
    }
}

EXTEND FORM migrationData PROPERTIES() importLegalEntities;