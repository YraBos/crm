MODULE Expense;

REQUIRE LegalEntity, Currency, AccountLedger;

NAMESPACE Expense;

CLASS Expense 'Расход' : AccountLedger;
TABLE expense (Expense);

company = DATA LegalEntity(Expense);
idCompany 'Код компании' (Expense e) = id(company(e));
nameCompany 'Компания' (Expense e) = name(company(e));

legalEntity = DATA LegalEntity(Expense);
idLegalEntity 'Код организации' (Expense e) = id(legalEntity(e));
nameLegalEntity 'Организация' (Expense e) = name(legalEntity(e));
customer (Expense e) = customer(legalEntity(e));
nameCustomer 'Клиент' (Expense e) = name(customer(legalEntity(e)));

CLASS ExpenseType 'Вид оплаты';
TABLE expenseType (ExpenseType);

name 'Наименование' = DATA ISTRING[100] (ExpenseType) CHARWIDTH 8;
skipExpense 'Не учитывать в расходах' = DATA BOOLEAN (ExpenseType);

FORM expenseType 'Вид оплаты'
    OBJECTS o = ExpenseType PANEL
    PROPERTIES(o) name, skipExpense
    
    EDIT ExpenseType OBJECT o
;

FORM expenseTypes 'Виды оплаты'
    OBJECTS o = ExpenseType
    PROPERTIES(o) READONLY name, skipExpense
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
    
    LIST ExpenseType OBJECT o
;

type = DATA ExpenseType(Expense);
nameType 'Вид оплаты' (Expense e) = name(type(e));

date 'Дата расхода' = DATA DATE (Expense);
datePayment 'Дата оплаты' = DATA DATE (Expense);
sum 'Сумма' = DATA NUMERIC[16,5](Expense);

currency = DATA Currency(Expense);
shortNameCurrency 'Валюта' (Expense e) = shortName(currency(e));
sidCurrency 'Валюта' (Expense e) = sid(currency(e));
sumCurrency 'Сумма в валюте' (Expense e) = round2(sum(e) * OVERRIDE (rateOn(defaultTypeExchange(), currency(e), date(e))), 1) MATERIALIZED;

note 'Примечание' = DATA TEXT (Expense);
noteString 'Примечание' (Expense e) = ISTRING[1000](note(e)) CHARWIDTH 20;

account = DATA Account(Expense);
numberAccount 'Р/с' (Expense p) = number(account(p)) CHARWIDTH 10;

accountTo = DATA Account(Expense);
numberAccountTo 'Р/с на' (Expense p) = number(accountTo(p)) CHARWIDTH 10;

WHEN LOCAL CHANGED (company(Expense p)) AND NOT CHANGED (account(p)) DO {
    account(p) <- account(company(p));
}

CONSTRAINT account(Expense p) AND NOT company(p) == legalEntity(account(p)) CHECKED BY account[Expense] MESSAGE 'Счёт расхода не соответствует компании';
CONSTRAINT accountTo(Expense p) AND NOT legalEntity(p) == legalEntity(accountTo(p)) CHECKED BY accountTo[Expense] MESSAGE 'Счёт на расхода не соответствует организации';
CONSTRAINT company(Expense p) AND NOT isCompany(company(p)) CHECKED BY company[Expense] MESSAGE 'Компания расхода не является компанией';

CLASS ExpenseAccountLedger : AccountLedger;
expenseAccountLedger = AGGR ExpenseAccountLedger WHERE accountTo(Expense expense);

date(ExpenseAccountLedger a) += date(expense(a)); 
legalEntity(ExpenseAccountLedger a) += legalEntity(expense(a)); 
sum(ExpenseAccountLedger a) += sum(expense(a)); 
note(ExpenseAccountLedger a) += ISTRING[250] (note(expense(a)));
account(ExpenseAccountLedger a) += accountTo(expense(a)); 

date(Expense p) += date(p);
sum(Expense p) += -sum(p);
note(Expense p) += ISTRING[250] (note(p));
account(Expense p) += account(p);

FORM expense 'Расход'
    OBJECTS o = Expense PANEL
    PROPERTIES(o) nameCompany, nameLegalEntity, nameCustomer, date, datePayment, nameType, sum, shortNameCurrency, sumCurrency, note, 
                  numberAccount, numberAccountTo
    
    EDIT Expense OBJECT o
;

FORM expenses 'Расходы'
    OBJECTS o = Expense
    PROPERTIES(o) READONLY nameCompany, nameLegalEntity, nameCustomer, date, datePayment, nameType, sum, shortNameCurrency, sumCurrency, numberAccount, numberAccountTo, noteString
    PROPERTIES(o) NEWSESSION NEW, EDIT, DELETE
    ORDERS date(o), datePayment(o)
;

FORM dialogExpenses 'Расходы'
    OBJECTS o = Expense
    PROPERTIES(o) READONLY nameCompany, nameLegalEntity, nameCustomer, date, datePayment, nameType, sum, shortNameCurrency, sumCurrency, numberAccount, numberAccountTo, noteString
    ORDERS date(o), datePayment(o)
    
    LIST Expense OBJECT o
;

NAVIGATOR {
    finance {
        NEW expenses;
    }
}