MODULE DebtDashboard;

REQUIRE DebtAgreement, Act, ActWord;

NAMESPACE Contract;

actTemplate = DATA Template (Contract);
nameActTemplate 'Шаблон для акта' (Contract c) = name(actTemplate(c));

FORM dialogActTemplates 'Шаблоны Word'
    OBJECTS t = Template
    PROPERTIES (t) READONLY name, id
    FILTERS GROUP SUM 1 IF in(ActType c, t)
;

changeActTemplate (Contract c) {
    DIALOG dialogActTemplates OBJECTS t INPUT DO {
        actTemplate(c) <- t;
    }
}

EXTEND FORM contract PROPERTIES nameActTemplate(o) ON CHANGE changeActTemplate(o);

DESIGN contract {
    add {
        MOVE PROPERTY (nameActTemplate(o));
    }
}

in 'Отм.' = DATA LOCAL BOOLEAN (Debt);

createActs 'Создать акты' () {

    LOCAL copy = BOOLEAN ();
    
    NEWSESSION NESTED (in[Debt]) {
        
        ASK 'Скопировать текст и название?' DO {
            copy() <- TRUE;
        }
        FOR in(Debt d) AND NOT act(d) DO NEW a = Act {
            act(d) <- a;
            contract(a) <- contract(d);
            date(a) <- currentDate();
            sum(a) <- sum(d);
            FOR Template t = actTemplate(contract(d)) DO {
                createActTemplate(a, t);
                process(t);
                NEW df = DocumentFile {
                    document(df) <- a;
                    file(df) <- FILE (resultTemplate());
                    dateTime(df) <- currentDateTime();
                    user(df) <- currentUser();
                }
            }
            IF copy() THEN {
                name(a) <- OVERRIDE name(agreement(d)), name(contract(d));
                text(a) <- OVERRIDE text(agreement(d)), text(contract(d));
            }
        }
        in(Debt t) <- NULL;
        APPLY;
    }
}

editAct 'Редактировать акт' (Debt d) {
    NEWSESSION SHOW act OBJECTS o = act(d) DOCKED;
}

deleteAct 'Удалить акт' (Debt d) {
    NEWSESSION {
        DELETE Act a WHERE a == act(d);
        APPLY;
    }
} CONFIRM;

filterDebtContractType = DATA LOCAL ContractType();
nameDebtFilterContractType 'Тип договора' () = name(filterDebtContractType());

editContract 'Редактировать договор' (Debt d) {
    NEWSESSION SHOW contract OBJECTS o = contract(d) DOCKED;
}

FORM debtDashboard 'Контроль задолженности'
    PROPERTIES nameDebtFilterContractType()
    OBJECTS d = Debt
    PROPERTIES in(d), createActs() DRAW d TOOLBAR
    PROPERTIES (d) TOOLBAR SHOWIF act(d) editAct, deleteAct 
    PROPERTIES (d) READONLY date, numberContract, nameContractType, nameCustomer, nameLegalEntity, numberAgreement, numberAct, dateAct, 
                            shortNameCurrency, sumCurrency, sum, paid
    PROPERTIES (d) TOOLBAR editContract
    ORDER date(d)
    FILTERS  contractType(d) == filterDebtContractType() OR NOT filterDebtContractType()
    FILTERGROUP paid FILTER 'Не оплачено' NOT paid(d) >= sum(d) DEFAULT 
;

DESIGN debtDashboard {
    OBJECTS {
        NEW filter FIRST {
            caption = 'Фильтры';
            MOVE PROPERTY (nameDebtFilterContractType());
        }
    }
}

NAVIGATOR {
    dashboard {
        NEW debtDashboard;
    }
}